---
# vim:ft=ansible:
- name: Install Postgres Playbook
  hosts: all
  gather_facts: False
  remote_user: root
  become: true
  tasks:
    - name: Check if data folder exists
      stat: path=/var/local/postgresql/data
      register: data_folder

    # skip whole execution if postgres is already configured and running, i.e. data folder exists

    - name: Install prerequisites - required for creating users etc.
      apt: name={{item}} state=present
      with_items:
        - libpq-dev
        - python-psycopg2
        - mc
        - awscli
          # - postgresql-client
      tags:
        - packages
      when: data_folder.stat.exists == False

    - name: Install postgres from tar
      unarchive:
        src: "{{ installation_source }}"
        dest: /usr/local
        copy: no
      when: data_folder.stat.exists == False

    - name: List installed postgres tools
      shell: ls -1 /usr/local/pgsql/bin/
      when: data_folder.stat.exists == False
      register: pgtools_list

    - name: Create symbolic links for postgres tools
      file:
        src:  /usr/local/pgsql/bin/{{ item }}
        dest: /usr/local/bin/{{ item }}
        state: link
      # work around ansible issue 16222 using `| default([])`
      with_items: "{{ pgtools_list.stdout_lines | default([]) }}"
      when: data_folder.stat.exists == False

    - name: Define service with systemd
      template:
        src: "files/postgresql.service"
        dest: "/etc/systemd/system/postgresql.service"
        mode: 0644
      when: data_folder.stat.exists == False
      notify:
        - Reload systemd daemon

    - name: Create postgres user
      user: name=postgres state=present shell="/bin/bash" comment="PostgreSQL administrator"
      when: data_folder.stat.exists == False

    - name: Create postgres data folder
      file: state=directory dest=/var/local/postgresql owner=postgres group=postgres mode=700
      when: data_folder.stat.exists == False

  handlers:
    - name: Reload systemd daemon
      shell: systemctl daemon-reload
