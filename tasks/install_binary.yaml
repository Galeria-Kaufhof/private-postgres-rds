---
- name: Check if data folder exists
  stat: path={{ postgres_var_dir }}/data
  register: data_folder

# skip whole execution if postgres is already configured and running, i.e. data folder exists

- name: Install prerequisites - required for creating users etc.
  apt: name={{item}} state=present
  with_items:
    - libpq-dev
    - python-psycopg2
    - mc
    - awscli
    - debian-goodies # for checkrestart
      # - postgresql-client
  tags:
    - packages
  when: data_folder.stat.exists == False
  # TODO when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  # TODO support RHEL too

- debug: msg="using installation source {{ installation_source }}"

- name: Create cache folder
  file: path=/var/cache/install/pg state=directory
  ignore_errors: true # ignore if it already exists as a link in vagrant-cachier setup

- name: Download installation tar first to avoid timeouts
  get_url:
    url: "{{ installation_source }}"
    dest: /var/cache/install/pg/{{ postgres_binary_name }}
    force: no
    timeout: 180
  when: data_folder.stat.exists == False

- name: Install postgres from tar
  unarchive:
    # src: "{{ installation_source }}"
    src: /var/cache/install/pg/{{ postgres_binary_name }}
    dest: /usr/local
    copy: no
  when: data_folder.stat.exists == False

- name: List installed postgres tools
  shell: ls -1 /usr/local/pgsql/bin/
  when: data_folder.stat.exists == False
  changed_when: false
  register: pgtools_list

- name: Create symbolic links for postgres tools
  file:
    src:  /usr/local/pgsql/bin/{{ item }}
    dest: /usr/local/bin/{{ item }}
    state: link
  # work around ansible issue 16222 using `| default([])`
  with_items: "{{ pgtools_list.stdout_lines | default([]) }}"
  when: data_folder.stat.exists == False

- name: Define service with systemd
  template:
    src: "files/postgresql.service"
    dest: "/etc/systemd/system/postgresql.service"
    mode: 0644
  notify:
    - Reenable service
    - Reload systemd daemon

- name: Create postgres user
  user: name=postgres state=present shell="/bin/bash" comment="PostgreSQL administrator"
  when: data_folder.stat.exists == False

- name: Create postgres data folder
  file: state=directory dest={{ postgres_var_dir }} owner=postgres group=postgres mode=700
  when: data_folder.stat.exists == False
